{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.page.scss","webpack:///./src/app/app.service.ts","webpack:///./src/app/sidenav/sidenav.component.html","webpack:///./src/app/sidenav/sidenav.component.scss","webpack:///./src/app/sidenav/sidenav.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./pages/home/home.module\": [\n\t\t\"./src/app/pages/home/home.module.ts\",\n\t\t\"pages-home-home-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    loadChildren: './pages/home/home.module#HomePageModule'\n\n  },\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n<ion-app>\\n    <!--<ion-split-pane>-->\\n        <ion-menu>\\n            <ion-header>\\n                <ion-toolbar color=\\\"dark\\\">\\n                    <ion-title>Menu</ion-title>\\n                </ion-toolbar>\\n            </ion-header>\\n            <ion-content>\\n                <ion-list>\\n                    <ion-menu-toggle auto-hide=\\\"false\\\" *ngFor=\\\"let p of appPages\\\">\\n                        <ion-item [routerDirection]=\\\"'root'\\\" [routerLink]=\\\"[p.url]\\\">\\n                            <ion-icon slot=\\\"start\\\" [name]=\\\"p.icon\\\"></ion-icon>\\n                            <ion-label>\\n                                {{p.title}}\\n                            </ion-label>\\n                        </ion-item>\\n                    </ion-menu-toggle>\\n                </ion-list>\\n\\n            </ion-content>\\n        </ion-menu>\\n        <ion-router-outlet main></ion-router-outlet>\\n    <!--</ion-split-pane>-->\\n</ion-app>\\n\\n\\n\"","import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.page.scss'],\n})\nexport class AppComponent {\n\n    public appPages = [\n        {\n            title: 'Home',\n            url: '/home',\n            icon: 'home'\n        },\n        {\n            title: 'Trending',\n            url: '/trending',\n            icon: 'repeat'\n        },\n        {\n            title: 'Recommended',\n            url: '/recommended',\n            icon: 'albums'\n        },\n        {\n            title: 'Saved',\n            url: '/saved',\n            icon: 'star'\n        },\n\n    ];\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, RouteReuseStrategy, Routes } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SidenavComponent } from './sidenav/sidenav.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppService } from './app.service';\n\n\n@NgModule({\n  declarations: [AppComponent, SidenavComponent, ],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n   HttpClientModule,\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    AppService,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \".hr {\\n  border-bottom: 1px solid #ccc;\\n  margin: 10px 0;\\n  width: 100%; }\\n\"","import { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\nconst API_URL = environment.apiUrl;\nconst API_KEY = environment.apiKey;\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AppService{\n\n    currentArticle: any;\n\n    constructor(private http: HttpClient) {}\n\n    //gets data from url\n    getData(url) {\n        return this.http.get(`${API_URL}/${url}&apiKey=${API_KEY}`);\n    }\n\n}","module.exports = \"\\n  <ion-header>\\n    <ion-toolbar>\\n      <ion-title>Menu</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  <ion-content>\\n    <ion-list>\\n\\n      <ion-menu-toggle auto-hide=\\\"false\\\" *ngFor=\\\"let p of appPages\\\">\\n\\n        <ion-item [routerDirection]=\\\"'root'\\\" [routerLink]=\\\"[p.url]\\\">\\n          <ion-icon slot=\\\"start\\\" [name]=\\\"p.icon\\\"></ion-icon>\\n          <ion-label>\\n            {{p.title}}\\n          </ion-label>\\n        </ion-item>\\n\\n      </ion-menu-toggle>\\n\\n\\n    </ion-list>\\n\\n\\n  </ion-content>\\n\\n\\n\"","module.exports = \"\"","import { Component, OnInit,  } from '@angular/core';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n\n     appPages = [\n        {\n            title: 'Home',\n            url: '/home',\n            icon: 'home'\n        },\n        {\n            title: 'List',\n            url: '/list',\n            icon: 'list'\n        }\n    ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\nexport const environment = {\n  production: false,\n   apiUrl: 'https://newsapi.org/v2',\n   apiKey: 'fe1cec683b0649c680cf6fa01166b9f6'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}